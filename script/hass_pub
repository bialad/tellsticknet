#!/usr/bin/env python3
# -*- mode: python; coding: utf-8 -*-

from sys import stdin, stderr, argv
from json import loads as load_json
from requests import Session, RequestException
import logging


API_URL = 'http://hass:8123/api'
SESSION = Session()


_LOGGER = logging.getLogger(__name__)
LOGFMT = "%(asctime)s %(levelname)5s (%(threadName)s) [%(name)s] %(message)s"
DATEFMT = "%y-%m-%d %H:%M.%S"

log_level = logging.INFO if '-v' in argv \
            else logging.DEBUG if '-vv' in argv \
                 else logging.ERROR

logging.basicConfig(level=log_level,
                    stream=stderr,
                    datefmt=DATEFMT,
                    format=LOGFMT)


for line in stdin:
    packet = load_json(line)
    url = '{base}/states/{entity}'.format(base=API_URL, entity=packet['entity'])
    _LOGGER.debug('Posting to url %s', url)
    method = packet['method']
    if method == 'turnon':
        state = 'on'
    elif method == 'turnoff':
        state = 'off'
    attributes = packet['attributes']
    payload = dict(state=state, attributes=attributes, packet=packet)
    try:
        res = SESSION.post(url, json=payload)
        res.raise_for_status()
    except RequestException as e:
        _LOGGER.error('Failed to post to url %s: %s %s', url, e, res.text)
